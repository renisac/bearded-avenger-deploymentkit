---

- name: update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 1800
  become: yes

# this next step is necessary due to an ansible bug for adding additional PPAs
- name: install lsb-release
  apt:
    name: lsb-release
  become: yes

- name: add deadsnakes PPA for non-std python version
  apt_repository:
    repo: ppa:deadsnakes/ppa
  become: yes

- name: add non-std python version 3.9
  apt:
    name: python3.9
    state: present
  become: yes

- name: add non-std python ver libs
  apt:
    state: latest
    name:
      - python3.9-dev
      - python3.9-minimal
      - python3.9-venv

- name: create cif venv directory
  file:
    path:   "{{ cif_venv }}"
    state:  directory
    owner:  root
    group:  cif
    mode:   0750

# https://www.jeffgeerling.com/blog/2017/add-path-global-path-ansible
- name: add venv path for cif user
  lineinfile:
    dest: "{{ cif_home | default(router.home) }}/.profile"
    line: 'export PATH="/cif_venv/bin:$PATH"'

# pip stuff
- name: upgrade pip
  pip:
    name: pip
    extra_args: "--upgrade"
    virtualenv: "{{ cif_venv }}"
    #virtualenv_python: python3.6
    virtualenv_command: /usr/bin/python3.9 -m venv

- name: install setuptools 
  pip:
    name: setuptools
    extra_args: "--upgrade"
    virtualenv: "{{ cif_venv }}"

- name: upgrade cython
  pip:
    name: cython
    extra_args: "--upgrade"
    virtualenv: "{{ cif_venv }}"

- name: upgrade wheel
  pip:
    name: wheel
    extra_args: "--upgrade"
    virtualenv: "{{ cif_venv }}"

- name: upgrade singledispatch
  pip:
    name: singledispatch
    extra_args: "--upgrade"
    virtualenv: "{{ cif_venv }}"

- name: install pytest
  pip:
    name: pytest
    version: '>=4.2'
    extra_args: "--upgrade"
    virtualenv: "{{ cif_venv }}"

- debug: msg="csirtg-indicator install"

- name: pull master from csirtg-indicator repo
  git:
    repo:     https://github.com/csirtgadgets/csirtg-indicator-py-v1
    dest:     /tmp/csirtg-indicator
  register: git_output

- debug:
    var: git_output

- name: install csirtg-indicator requirements
  pip:
    chdir: /tmp/csirtg-indicator
    requirements: requirements.txt
    virtualenv: "{{ cif_venv }}"
  register: pip_output

- debug:
    var: pip_output

- name: install csirtg-indicator from cloned repo
  pip:
    name: file:///tmp/csirtg-indicator
    virtualenv: "{{ cif_venv }}"

- debug: msg="csirtg-smrt install"

- name: pull from csirtg-smrt-v1 repo
  git:
    repo:     https://github.com/csirtgadgets/csirtg-smrt-v1
    dest:     /tmp/csirtg-smrt

- name: install csirtg-smrt requirements
  pip:
    chdir: /tmp/csirtg-smrt
    requirements: extras_requirements.txt
    virtualenv: "{{ cif_venv }}"

- name: install csirtg-smrt from cloned repo
  pip:
    name: file:///tmp/csirtg-smrt
    virtualenv: "{{ cif_venv }}"

- debug: msg="cifsdk-py-v3 install"

- name: pull master from cifsdk-py-v3 repo
  git:
    repo:     https://github.com/csirtgadgets/cifsdk-py-v3
    dest:     /tmp/cifsdk-py-v3

- name: install cifsdk-py-v3 requirements
  pip:
    chdir: /tmp/cifsdk-py-v3
    requirements: requirements.txt
    virtualenv: "{{ cif_venv }}"

- name: install cifsdk-py-v3 from cloned repo
  pip:
    name: file:///tmp/cifsdk-py-v3
    virtualenv: "{{ cif_venv }}"

- debug: msg="bearded-avenger install"

- name: pull release from github (no deploy key)
  git:
    repo: "{{ cif_release_url | default(cif.release_url) }}"
    dest: /tmp/bearded-avenger
    #version: "{{ cif_version }}"
    key_file: '/tmp/github_deploy_key'
    accept_hostkey: yes
  when: github_deploy_key_file is undefined or github_deploy_key_file == ""

- name: copy github deploy key
  copy:
    src: "{{ github_deploy_key_file }}"
    dest: '/tmp/github_deploy_key'
    mode: '0600'
  when:
    - github_deploy_key_file is defined and github_deploy_key_file != ""
    - DOCKER_BUILD is undefined or DOCKER_BUILD == 'no' or DOCKER_BUILD == ""

- name: pull release from github (deploy key exists)
  git:
    repo: "{{ cif_release_url }}"
    dest: /tmp/bearded-avenger
    #version: "{{ cif_version }}"
    key_file: '/tmp/github_deploy_key'
    accept_hostkey: yes
  when: github_deploy_key_file is defined and github_deploy_key_file != ""

- name: "set cif working dir"
  set_fact: cif_release_dir="/tmp/bearded-avenger"
  #when: github_deploy_key_file is defined and github_deploy_key_file != ""

- debug: msg="{{ cif_release_dir }}"

- name: install requirements
  command: pip install -r dev_requirements.txt chdir={{ cif_release_dir }}
  environment:
    PATH: "{{ cif_venv }}/bin:{{ ansible_env.PATH }}"
  register: pip_output

- debug:
    var: pip_output

- name: make cif account owner of bearded-avenger repo so sqlite3 tests work
  file:
    path: "{{ cif_release_dir }}"
    state: directory
    recurse: yes
    group: cif
    owner: cif

- name: run tests
  command: python setup.py test chdir={{ cif_release_dir }}
  environment:
    PATH: "{{ cif_venv }}/bin:{{ ansible_env.PATH }}"
  become: yes
  become_user: cif

- name: install cif
  command: python setup.py install chdir={{ cif_release_dir }}
  environment:
    PATH: "{{ cif_venv }}/bin:{{ ansible_env.PATH }}"
    CIF_ENABLE_INSTALL: 1
